buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "io.franzbecker.gradle-lombok" version "1.13"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "io.franzbecker.gradle-lombok"

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // QueryDSL
    compile('com.querydsl:querydsl-core:4.1.4')
    compile('com.querydsl:querydsl-apt:4.1.4')
    compile('com.querydsl:querydsl-jpa:4.1.4')

    // apach-common
    compile('org.apache.commons:commons-lang3:3.7')

    // spring security
    compile('org.springframework.security:spring-security-web:5.0.5.RELEASE')

    // mariaDB
    runtime('org.mariadb.jdbc:mariadb-java-client:2.2.3')
}

def queryDslOutput = file("src/main/generated")
sourceSets {
    main {
        java {
            srcDir queryDslOutput
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = queryDslOutput
    options.compilerArgs = [
            "-proc:only",
            "-processor", 'com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
    options.encoding = 'UTF-8'
}

compileJava.dependsOn(generateQueryDSL)

clean {
    delete queryDslOutput
}
